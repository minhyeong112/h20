name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: |
          cd h20
          echo "ðŸ”„ Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          echo "ðŸ”§ Generating environment file from template..."
          # Export all secrets as environment variables for the generator script
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          export ANTHROPIC_API_KEY="${{ secrets.ANTHROPIC_API_KEY }}"
          export GOOGLE_KEY="${{ secrets.GOOGLE_KEY }}"
          export XAI_API_KEY="${{ secrets.XAI_API_KEY }}"
          export PERPLEXITY_API_KEY="${{ secrets.PERPLEXITY_API_KEY }}"
          export SERPER_API_KEY="${{ secrets.SERPER_API_KEY }}"
          export FIRECRAWL_API_KEY="${{ secrets.FIRECRAWL_API_KEY }}"
          export JINA_API_KEY="${{ secrets.JINA_API_KEY }}"
          export STT_API_KEY="${{ secrets.STT_API_KEY }}"
          export TTS_API_KEY="${{ secrets.TTS_API_KEY }}"
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export JWT_REFRESH_SECRET="${{ secrets.JWT_REFRESH_SECRET }}"
          export CREDS_KEY="${{ secrets.CREDS_KEY }}"
          export CREDS_IV="${{ secrets.CREDS_IV }}"
          export MEILI_MASTER_KEY="${{ secrets.MEILI_MASTER_KEY }}"
          export DOMAIN_CLIENT="${{ secrets.DOMAIN_CLIENT }}"
          export DOMAIN_SERVER="${{ secrets.DOMAIN_SERVER }}"
          export ASSISTANTS_API_KEY="${{ secrets.ASSISTANTS_API_KEY }}"
          export OPENWEATHER_API_KEY="${{ secrets.OPENWEATHER_API_KEY }}"
          export LIBRECHAT_CODE_API_KEY="${{ secrets.LIBRECHAT_CODE_API_KEY }}"
          # Generate .env file using the template system
          node config/generate-env.js
          echo "ðŸ”„ Restarting services..."
          docker compose down
          docker compose up -d --build
          echo "âœ… Deployment complete!"
          docker compose ps
